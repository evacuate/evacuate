name: Service

on:
  push:
    branches: ["main", "develop"]

env:
  IS_PRODUCTION: ${{ github.ref == 'refs/heads/main' }}

jobs:
  deploy:
    name: ${{ github.ref == 'refs/heads/main' && 'Production' || 'Preview' }}
    runs-on: ubuntu-latest
    if: github.repository == 'evacuate/evacuate'

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Deployment Variables
        id: set_vars
        run: |
          echo "DEPLOY_ENV=$([[ '${{ env.IS_PRODUCTION }}' == 'true' ]] && echo 'Production' || echo 'Preview')" >> $GITHUB_ENV
          echo "DOKKU_HOST=$([[ '${{ env.IS_PRODUCTION }}' == 'true' ]] && echo '${{ secrets.DOKKU_HOST }}' || echo '${{ secrets.DOKKU_PREVIEW_HOST }}')" >> $GITHUB_ENV
          echo "DOKKU_PORT=$([[ '${{ env.IS_PRODUCTION }}' == 'true' ]] && echo '${{ secrets.DOKKU_PORT }}' || echo '${{ secrets.DOKKU_PREVIEW_PORT }}')" >> $GITHUB_ENV
          echo "DOKKU_APP_NAME=$([[ '${{ env.IS_PRODUCTION }}' == 'true' ]] && echo '${{ secrets.DOKKU_APP_NAME }}' || echo '${{ secrets.DOKKU_PREVIEW_APP_NAME }}')" >> $GITHUB_ENV

      - name: Create GitHub Deployment
        uses: chrnorm/deployment-action@v2
        with:
          environment: ${{ env.DEPLOY_ENV }}
          description: "Deploying to ${{ env.DEPLOY_ENV }}"
          token: ${{ github.token }}
        id: deployment

      - name: Push to Dokku (${{ env.DEPLOY_ENV }})
        uses: dokku/github-action@v1.6.0
        with:
          git_remote_url: ssh://dokku@${{ env.DOKKU_HOST }}:${{ env.DOKKU_PORT }}/${{ env.DOKKU_APP_NAME }}
          ssh_private_key: ${{ env.IS_PRODUCTION == 'true' && secrets.DOKKU_SSH_PRIVATE_KEY || secrets.DOKKU_PREVIEW_SSH_PRIVATE_KEY }}
          branch: ${{ env.IS_PRODUCTION == 'true' && 'main' || 'develop' }}
          git_push_flags: --force

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-action@v2
        with:
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'
          token: ${{ github.token }}
          description: "Deployment completed successfully"

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-action@v2
        with:
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'
          token: ${{ github.token }}
          description: "Deployment failed"
